import axios from 'axios';
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import {useRouter} from 'next/router'
import {useState, useEffect} from 'react';
import styles from '../styles/Home.module.scss'
import {auth} from '../firebase';
import { onAuthStateChanged } from '@firebase/auth';
import { useSpeechSynthesis } from 'react-speech-kit';

import { loadStripe } from '@stripe/stripe-js';
const stripe = loadStripe('pk_test_51LMmXEH4L0tNgZmvdfR3oCoZgu0yJb5pXviEPNMCu3uNdpylncfzKWYcUk7FD9HkSjFut1eQG8HjbzkFDiqbeiAh00KGI2Y42W');


//console.log(stripe)

export default function Home() {

  const router = useRouter();

  const [user, setUser] = useState('')
  const [file, setFile] = useState(null)
  const [text, setText] = useState('')


  const { speak, cancel } = useSpeechSynthesis();


  //onAuthStateChanged(auth, (user) => setUser(user));                                    // This hangs the application whenever I use 'setState'.

  const handleGetUserData = async () => {
    let token;
    const user = auth.currentUser;

    
    if (user) {
      console.log(user)
      const url = 'http://localhost:8000/api/v1/users/profile';

      token = await auth.currentUser.getIdToken(true);

      try {

        const response = await axios.get(url, {
          headers: {
            Authorization: token
          }
        })

        console.log(response.data)
      } catch (error) {
        console.log(error)
      }
    } else {

      console.log('You are not authorized')
    }
  }


  const onFileChange = async (event) => {
    let token = await auth.currentUser.getIdToken(true)
    const response = await axios.get('http://localhost:8000/api/v1/file/get-url', {
                    headers: {
                      Authorization: token
                    }
                  })
          
    console.log(response.data.preSignedUrl)

    const upload = await axios.put(response.data.preSignedUrl, event.target.files[0], {

      headers: {
        'Content-Type': 'video/mp4'
      }
    })

    console.log(upload)
    
  }

  const buyMMI = async (e) => {

    try {
      let token = await auth.currentUser.getIdToken(true);
      const session = await axios(
        `http://127.0.0.1:8000/api/v1/bookings/checkout-session/mmi`, {
          headers: {
            Authorization: token
          }
        }
      );

      console.log(session.data.data.url)

      router.push(session.data.data.url)
    } catch (err) {
      console.log(err)

    }

  }

  const buyTraditional = async (e) => {

    try {
      let token = await auth.currentUser.getIdToken(true);
      const session = await axios(
        `http://127.0.0.1:8000/api/v1/bookings/checkout-session/traditional`, {
          headers: {
            Authorization: token
          }
        }
      );

      console.log(session.data.data.url)

      router.push(session.data.data.url)
    } catch (err) {
      console.log(err)

    }

  }

  useEffect( () => {

    const createBooking = async () => {

      const {interview, user, price} = (router.query);
      
      let booking;
      if (interview && user && price) {
  
        booking = await axios(`http://127.0.0.1:8000/api/v1/bookings/create-booking?interview=${interview}&user=${user}&price=${price}`)
  
        
      }

      if (booking) router.push('/')
    }

    createBooking()
    
  })

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className='checkauth__button'>
          <button onClick={handleGetUserData}>Get User Data</button>
          <h3>Above button sends token to backend, verifies the token, gets the authorized user data from mongodb and returns it.</h3>
        </div>

        <div className="upload__button">
          <input type="file" accept="video/mp4,video/x-m4v,video/*" onChange={(e) => onFileChange(e)} />
          <h1>Above button will open the explorer allowing us to choose a video file. Once the file is choosen, a handler function is triggered, which first sends the request to backend to verify the user credentials
            and then it uplaods the file to S3 bucket</h1>
        </div>


        <div className="payment">

          
          <div className="mmi" onClick={buyMMI}>
            <Link href="">
              <a>Buy MMI <span>$50/-</span></a>
            </Link>
          </div>

          <div className="traditional" onClick={buyTraditional}>
            <Link href="">
              <a>Buy Traditional <span>$30/-</span></a>
            </Link>
          </div>
        </div>


        <div className="text_to_speech">

          <div className="text__container">

            <textarea name="" id="" cols="30" rows="10" onChange={(e) => setText(e.target.value)}>

            </textarea>
          </div>

          <div className="speech__btn">
            <button onClick={() => speak({text: text})}>Click To Speak above text</button>
            <button onClick={() => cancel()}>Click To Stop</button>
          </div>
        </div>
      </main>
    </div>
  )
}
