import axios from 'axios';
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import {useRouter} from 'next/router'
import {useState, useEffect} from 'react';
import styles from '../styles/Home.module.scss'
import {auth} from '../firebase';
import { onAuthStateChanged } from '@firebase/auth';


//console.log(stripe)

export default function Home() {

    const router = useRouter();
    const [interviews, setInterviews] = useState([])



    //onAuthStateChanged(auth, (user) => setUser(user));                                    // This hangs the application whenever I use 'setState'.


    const startInterview = async (interview) => {

        const response = await axios.get(`http://localhost:8000/api/v1/interviews/start-interview/${interview.bookingId}`)

        console.log(response.data.data.interview)
    }

    useEffect(() => {


        const getInterviews = async () => {
    
            console.log(auth.currentUser)
            //let token = await auth.currentUser.getIdToken(true)
            const response = await axios.get('http://localhost:8000/api/v1/interviews/get-all-interviews', {
                headers: {
                    //Authorization: token
                }
            })

            setInterviews(response.data.data.interviews)

        }
        
        getInterviews();

        
    }, [])
    console.log(interviews)

    return (
        <div className={styles.container}>
        <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
            <div><h2>Interviews That You have bought:</h2></div>
            {
               interviews.length ? <div>{interviews.map((interview) => {
                return (
                    <div>
                        <p>Interview Id: {interview._id}`</p>
                        <p>Interview Status: {interview.status}</p>
                        <p>Interview BookingId: {interview.bookingId}</p>

                        {interview.status === 'unsubmitted' ? <div><button onClick={() => startInterview(interview)}>Start Interview</button></div> : null}
         
                    </div>
                )
               })}</div> : <div>No Interviews</div>
            }
        </main>
        </div>
    )
}
